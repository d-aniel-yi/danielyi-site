{
 "Resources": {
  "SiteBucket397A1860": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebStack/SiteBucket/Resource"
   }
  },
  "SiteBucketPolicy3AC1D0F8": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "SiteBucket397A1860"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "SiteBucket397A1860",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SiteBucket397A1860",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "OAIE1EFC67F",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "SiteBucket397A1860",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "OAIE1EFC67F",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "SiteBucket397A1860",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SiteBucket397A1860",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/SiteBucket/Policy/Resource"
   }
  },
  "OAIE1EFC67F": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/OAI/Resource"
   }
  },
  "ResponseHeaders84BC52D6": {
   "Type": "AWS::CloudFront::ResponseHeadersPolicy",
   "Properties": {
    "ResponseHeadersPolicyConfig": {
     "Name": "WebStackResponseHeaders14259C5C",
     "SecurityHeadersConfig": {
      "ContentSecurityPolicy": {
       "ContentSecurityPolicy": "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://app.launchdarkly.com https://clientstream.launchdarkly.com https://events.launchdarkly.com; font-src 'self' data:; object-src 'none'; base-uri 'self'; frame-ancestors 'none'",
       "Override": true
      },
      "ContentTypeOptions": {
       "Override": true
      },
      "FrameOptions": {
       "FrameOption": "DENY",
       "Override": true
      },
      "ReferrerPolicy": {
       "Override": true,
       "ReferrerPolicy": "no-referrer-when-downgrade"
      },
      "StrictTransportSecurity": {
       "AccessControlMaxAgeSec": 31536000,
       "IncludeSubdomains": true,
       "Override": true,
       "Preload": true
      },
      "XSSProtection": {
       "ModeBlock": true,
       "Override": true,
       "Protection": true
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/ResponseHeaders/Resource"
   }
  },
  "DaCertCertificateRequestorFunctionServiceRole10C67132": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/DaCert/CertificateRequestorFunction/ServiceRole/Resource"
   }
  },
  "DaCertCertificateRequestorFunctionServiceRoleDefaultPolicy87F99EF8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "acm:RequestCertificate",
        "acm:DescribeCertificate",
        "acm:DeleteCertificate",
        "acm:AddTagsToCertificate"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "route53:GetChange",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "route53:changeResourceRecordSets",
       "Condition": {
        "ForAllValues:StringEquals": {
         "route53:ChangeResourceRecordSetsRecordTypes": [
          "CNAME"
         ],
         "route53:ChangeResourceRecordSetsActions": [
          "UPSERT"
         ]
        },
        "ForAllValues:StringLike": {
         "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
          "*.da.nielyi.com"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":route53:::hostedzone/Z010704225YLFKPU2LI9F"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DaCertCertificateRequestorFunctionServiceRoleDefaultPolicy87F99EF8",
    "Roles": [
     {
      "Ref": "DaCertCertificateRequestorFunctionServiceRole10C67132"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/DaCert/CertificateRequestorFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DaCertCertificateRequestorFunction5CB23C85": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-167053021813-us-west-2",
     "S3Key": "b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8.zip"
    },
    "Handler": "index.certificateRequestHandler",
    "Role": {
     "Fn::GetAtt": [
      "DaCertCertificateRequestorFunctionServiceRole10C67132",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Timeout": 900
   },
   "DependsOn": [
    "DaCertCertificateRequestorFunctionServiceRoleDefaultPolicy87F99EF8",
    "DaCertCertificateRequestorFunctionServiceRole10C67132"
   ],
   "Metadata": {
    "aws:cdk:path": "WebStack/DaCert/CertificateRequestorFunction/Resource",
    "aws:asset:path": "asset.b073cebcf4d61fb152a30f5a5e57a94df7f980a549fdf1a79a0b18c5750522d8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DaCertCertificateRequestorResource590E2D65": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "DaCertCertificateRequestorFunction5CB23C85",
      "Arn"
     ]
    },
    "DomainName": "da.nielyi.com",
    "HostedZoneId": "Z010704225YLFKPU2LI9F",
    "Region": "us-east-1"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebStack/DaCert/CertificateRequestorResource/Default"
   }
  },
  "Distribution830FAC52": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "Aliases": [
      "da.nielyi.com"
     ],
     "CustomErrorResponses": [
      {
       "ErrorCachingMinTTL": 0,
       "ErrorCode": 403,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      },
      {
       "ErrorCachingMinTTL": 0,
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "ResponseHeadersPolicyId": {
       "Ref": "ResponseHeaders84BC52D6"
      },
      "TargetOriginId": "WebStackDistributionOrigin128332BA7",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "SiteBucket397A1860",
         "RegionalDomainName"
        ]
       },
       "Id": "WebStackDistributionOrigin128332BA7",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "OAIE1EFC67F"
           }
          ]
         ]
        }
       }
      }
     ],
     "ViewerCertificate": {
      "AcmCertificateArn": {
       "Fn::GetAtt": [
        "DaCertCertificateRequestorResource590E2D65",
        "Arn"
       ]
      },
      "MinimumProtocolVersion": "TLSv1.2_2021",
      "SslSupportMethod": "sni-only"
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/Distribution/Resource"
   }
  },
  "DaAlias8877F178": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "Distribution830FAC52",
       "DomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::FindInMap": [
       "AWSCloudFrontPartitionHostedZoneIdMap",
       {
        "Ref": "AWS::Partition"
       },
       "zoneId"
      ]
     }
    },
    "HostedZoneId": "Z010704225YLFKPU2LI9F",
    "Name": "da.nielyi.com.",
    "Type": "A"
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/DaAlias/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22PwW7CMBBEv4W7cSG0HwBBqD1UVEHqFS32JlpI7Mi7Lqqs/HuVBEgPnGbW82zvZDpbZnoxgyvPjb3MazrpdBAwFwVXPiZe6bSJ5oKi8tLd3ChfvibzOx3f5nHYAGOnTO2jLYN3otM+UEVubQwyf1h0QjJczntm1zNPiQK59Y7xHcFi4OnT58GWWAKdopB3PfV/7pTBIFSSAcEGHFQY9NbxN9RkQdDmU6xqaE4WdNpFZ+6P3X2nCBqdCl/jsEmv02Kj6xSvjsCMwnrdiwo+Cr6tdFoXaHywY4neHVC6rm/qYzCoBvwgUJGrVB5ZfPPIxuIP/wltO1Cl20dpo3TKeYv6zC8/WaaXr3oxOzPRPEQn1KAuRv0Dmfmt7PcBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "WebStack/CDKMetadata/Default"
   }
  }
 },
 "Mappings": {
  "AWSCloudFrontPartitionHostedZoneIdMap": {
   "aws": {
    "zoneId": "Z2FDTNDATAQYW2"
   },
   "aws-cn": {
    "zoneId": "Z3RFFRIM2A3IF5"
   }
  }
 },
 "Outputs": {
  "SiteBucketName": {
   "Value": {
    "Ref": "SiteBucket397A1860"
   }
  },
  "CloudFrontDistributionId": {
   "Value": {
    "Ref": "Distribution830FAC52"
   }
  },
  "CloudFrontDomainName": {
   "Value": {
    "Fn::GetAtt": [
     "Distribution830FAC52",
     "DomainName"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}